name: DockerHub

on:
  push:
    tags:
      - '**'
env:
  DOCKERHUB_USERNAME: singhramanpreet
  DOCKERHUB_REPO: vscode-devcontainers

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_NAME: ${{ steps.image.outputs.IMAGE_NAME }}
      DOCKERFILE: ${{ steps.dockerfile.outputs.DOCKERFILE }}
      VERSION: ${{ steps.dockerfile.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v2
      - name: Get image name
        id: image
        run: |
          echo "IMAGE_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "::set-output name=IMAGE_NAME::${GITHUB_REF##*/}"

      - name: Get Dockerfile name and build version arg
        id: dockerfile
        run: |
          echo "DOCKERFILE=${IMAGE_NAME%%-*}/Dockerfile" >> $GITHUB_ENV
          echo "::set-output name=DOCKERFILE::${IMAGE_NAME%%-*}/Dockerfile"
          echo "VERSION=$(echo $IMAGE_NAME | cut -d - -f2)" >> $GITHUB_ENV
          echo "::set-output name=VERSION::$(echo $IMAGE_NAME | cut -d - -f2)"

      - name: Check file and command
        run: |
          echo "====================="
          echo "Dockerfile content"
          cat $DOCKERFILE
          echo ""
          echo "====================="
          echo "Build Command"
          echo docker build . --file $DOCKERFILE --tag $IMAGE_NAME --build-arg VERSION=$VERSION
          echo "====================="


  build-push:
    needs: prepare

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Get names from build job
        run: |
          echo "IMAGE_NAME=${{ needs.prepare.outputs.IMAGE_NAME }}" >> $GITHUB_ENV
          echo "DOCKERFILE=${{ needs.prepare.outputs.DOCKERFILE }}" >> $GITHUB_ENV
          echo "VERSION=${{ needs.prepare.outputs.VERSION }}" >> $GITHUB_ENV

      - name: Build image
        run: docker build . --file $DOCKERFILE --tag $IMAGE_NAME --build-arg VERSION=$VERSION

      - name: Log into registry
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u $DOCKERHUB_USERNAME --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=$DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$IMAGE_NAME

          echo IMAGE_ID=$IMAGE_ID

          IMAGE_NAME_LATEST=$(echo $IMAGE_NAME | cut -d - -f1)
          IMAGE_ID_LATEST=$(echo $IMAGE_ID | sed -e 's,\(.*\):.*,\1,g'):$IMAGE_NAME_LATEST

          echo IMAGE_ID_LATEST=$IMAGE_ID_LATEST

          docker tag $IMAGE_NAME $IMAGE_ID
          docker tag $IMAGE_NAME $IMAGE_ID_LATEST

          docker push $IMAGE_ID
          docker push $IMAGE_ID_LATEST
