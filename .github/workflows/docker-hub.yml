name: DockerHub

on:
  workflow_dispatch:
    inputs:
      directory:
        type: text
        required: true
      version:
        type: text
        required: true
      tag:
        type: text
        required: true
      isLatest:
        type: boolean
        required: true
        default: true
      additionalDockerArgs:
        type: text
        required: false
      dockerhubUsername:
        type: text
        required: true
        default: "singhramanpreet"
      dockerhubRepo:
        type: text
        required: true
        default: "vscode-devcontainers"
env:
  DOCKERHUB_USERNAME: ${{ github.event.inputs.dockerhubUsername }}
  DOCKERHUB_REPO: ${{ github.event.inputs.dockerhubRepo }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tag }}
          
      - name: Set vars
        run: |
          echo "IMAGE_NAME=${{ github.event.inputs.directory }}" >> $GITHUB_ENV
          echo "DOCKERFILE=${{ github.event.inputs.directory }}/Dockerfile" >> $GITHUB_ENV
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          echo "ARGS=${{ github.event.inputs.additionalDockerArgs }}" >> $GITHUB_ENV
          echo "IS_LATEST=${{ github.event.inputs.isLatest }}" >> $GITHUB_ENV
          echo "REPO_URL=https://github.com/${{ github.repository }}">> $GITHUB_ENV
          
      - name: Build image
        run: docker build . --file $DOCKERFILE --tag $IMAGE_NAME $ARGS
        
      - name: Log into registry
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u $DOCKERHUB_USERNAME --password-stdin
        
      - name: Push image
        run: |
          IMAGE_ID_LATEST=$DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$IMAGE_NAME
          IMAGE_ID_VERSION=$DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$IMAGE_NAME-$VERSION
          echo "IMAGE_ID_LATEST=$IMAGE_ID_LATEST" >> $GITHUB_ENV
          echo "IMAGE_ID_VERSION=$IMAGE_ID_VERSION" >> $GITHUB_ENV
          
          echo $IMAGE_ID_LATEST
          echo $IMAGE_ID_VERSION
          
          docker tag $IMAGE_NAME $IMAGE_ID_VERSION
          docker tag $IMAGE_NAME $IMAGE_ID_LATEST
          
          docker push $IMAGE_ID_VERSION
          if $IS_LATEST; then
            docker push $IMAGE_ID_LATEST
          fi
          
      - uses: actions/checkout@v3
        with:
          ref: main
      - name: Update README.md
        run: |
          echo "\`${IMAGE_ID_VERSION}\` | [\`$IMAGE_NAME-$VERSION\`](${REPO_URL}/blob/${TAG}/${IMAGE_NAME}/Dockerfile) | \`${TAG}\` | [![Docker Image Version (tag latest semver)](https://img.shields.io/docker/v/$DOCKERHUB_USERNAME/$DOCKERHUB_REPO/$IMAGE_NAME-$VERSION?logo=docker)](#) [![Docker Image Size (tag)](https://img.shields.io/docker/image-size/$DOCKERHUB_USERNAME/$DOCKERHUB_REPO/$IMAGE_NAME-$VERSION?logo=docker)](#)" >> ${IMAGE_NAME}/README.md
          
          if $IS_LATEST; then
            sed -E -e "s,\|.*(latest).*\|,\| \`\1\` -> \`${TAG}\` \|," -i ${IMAGE_NAME}/README.md
          fi
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ${IMAGE_NAME}/README.md
          git commit -m "Update ${IMAGE_NAME}/README.md"
          git push
